{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Igor CloudFormation stack",
    "Parameters": {
        "DeploymentBucket": {
            "Type": "String"
        },
        "WebSiteBucket": {
            "Type": "String"
        },
        "CognitoPoolArn": {
            "Type": "String"
        }
    },
    "Resources": {
        "igorTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 1,
                    "WriteCapacityUnits": 1
                },
                "TableName": "igor"
            }
        },
        "igorLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "DeploymentBucket"
                    },
                    "S3Key": "igor.zip"
                },
                "Handler": "main.handler",
                "MemorySize": 128,
                "FunctionName": "igor",
                "Role": {
                    "Fn::GetAtt": [
                        "igorLambdaRole",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs4.3",
                "Timeout": 50
            },
            "DependsOn": [
                "igorLambdaRole"
            ]
        },
        "igorCronLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Ref": "igorLambdaFunction"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "igorCronRule",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "igorCronRule",
                "igorLambdaFunction"
            ]
        },
        "igorCronRule": {
            "Type": "AWS::Events::Rule",
            "DependsOn": [
                "igorLambdaFunction"
            ],
            "Properties": {
                "ScheduleExpression": "rate(1 minute)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "igorLambdaFunction",
                                "Arn"
                            ]
                        },
                        "Id": "igorCronRule"
                    }
                ]
            }
        },
        "igorLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "root",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:*"
                                    ],
                                    "Resource": "arn:aws:dynamodb:*:*:*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "siteBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "PublicRead",
                "BucketName": {
                    "Ref": "WebSiteBucket"
                },
                "WebsiteConfiguration": {
                    "IndexDocument": "index.html",
                    "ErrorDocument": "error.html"
                }
            },
            "DeletionPolicy": "Retain"
        },
        "cognitoRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": "cognito-identity.amazonaws.com"
                            },
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Condition": {
                                "StringEquals": {
                                    "cognito-identity.amazonaws.com:aud": {
                                        "Ref": "CognitoPoolArn"
                                    }
                                },
                                "ForAnyValue:StringLike": {
                                    "cognito-identity.amazonaws.com:amr": "authenticated"
                                }
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "cognitoCanReadDynamoPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:dynamodb:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":*:table/",
                                                    {
                                                        "Ref": "igorTable"
                                                    }
                                                ]
                                            ]
                                        }
                                    ],
                                    "Condition": {
                                        "ForAllValues:StringEquals": {
                                            "dynamodb:LeadingKeys": [
                                                "${cognito-identity.amazonaws.com:sub}"
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "Path": "/"
            }
        }
    },
    "Outputs": {
        "websiteURL": {
            "Value": {
                "Fn::GetAtt": [
                    "siteBucket",
                    "WebsiteURL"
                ]
            },
            "Description": "URL for website hosted on S3"
        },
        "websiteSecureURL": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Fn::GetAtt": [
                                "siteBucket",
                                "DomainName"
                            ]
                        }
                    ]
                ]
            },
            "Description": "Name of S3 bucket to hold website content"
        },
        "cognitoRuleArn": {
            "Value": {
                "Fn::GetAtt": [
                    "cognitoRole",
                    "Arn"
                ]
            }
        }
    }
}